//
//This file was generated by SharpCraft.Generator.
//Do not make changes directly to this file. Change the template file instead.
//

namespace SharpCraft
{
    /// <summary>
    /// All the different ID's/Types/States things in the game can have
    /// </summary>
    public static partial class ID
    {
		#pragma warning disable 1591
        public class Effect : NamespacedEnumLike<string>
        {
            public Effect(string value, BasePackNamespace? @namespace = null) : base(value, @namespace)
            {
            }

            /// <summary>
            /// Converts the enum object into a data tag
            /// </summary>
            /// <param name="asType">The type to convert to</param>
            /// <param name="extraConversionData">Extra information on how to convert</param>
            /// <returns>The enum object as a data tag</returns>
            public override Data.DataPartTag GetAsTag(ID.NBTTagType? asType, object?[] extraConversionData)
            {
                if (asType == ID.NBTTagType.TagString || asType is null)
                {
                    return new Data.DataPartTag(ToString());
                }
                else if (asType == ID.NBTTagType.TagByte || asType is null)
                {

                    return new Data.DataPartTag((byte)GetEffectId());
                }
                else
                {
                    throw new System.ArgumentException("Cannot convert " + GetType() + " into a data tag of type " + asType.ToString() + ".");
                }
            }

            /// <summary>
            /// Gets the id of the effect
            /// </summary>
            /// <returns>The id of the effect</returns>
            public int GetEffectId()
            {
                int index = 0;
                foreach(Effect effect in GetValuesFromEnumHolder<Effect>())
                {
                    index++;
                    if (effect == this)
                    {
                        return index;
                    }
                }
                return index;
            }

            public static readonly Effect speed = new Effect("speed");
            public static readonly Effect slowness = new Effect("slowness");
            public static readonly Effect haste = new Effect("haste");
            public static readonly Effect mining_fatigue = new Effect("mining_fatigue");
            public static readonly Effect strength = new Effect("strength");
            public static readonly Effect instant_health = new Effect("instant_health");
            public static readonly Effect instant_damage = new Effect("instant_damage");
            public static readonly Effect jump_boost = new Effect("jump_boost");
            public static readonly Effect nausea = new Effect("nausea");
            public static readonly Effect regeneration = new Effect("regeneration");
            public static readonly Effect resistance = new Effect("resistance");
            public static readonly Effect fire_resistance = new Effect("fire_resistance");
            public static readonly Effect water_breathing = new Effect("water_breathing");
            public static readonly Effect invisibility = new Effect("invisibility");
            public static readonly Effect blindness = new Effect("blindness");
            public static readonly Effect night_vision = new Effect("night_vision");
            public static readonly Effect hunger = new Effect("hunger");
            public static readonly Effect weakness = new Effect("weakness");
            public static readonly Effect poison = new Effect("poison");
            public static readonly Effect wither = new Effect("wither");
            public static readonly Effect health_boost = new Effect("health_boost");
            public static readonly Effect absorption = new Effect("absorption");
            public static readonly Effect saturation = new Effect("saturation");
            public static readonly Effect glowing = new Effect("glowing");
            public static readonly Effect levitation = new Effect("levitation");
            public static readonly Effect luck = new Effect("luck");
            public static readonly Effect unluck = new Effect("unluck");
            public static readonly Effect slow_falling = new Effect("slow_falling");
            public static readonly Effect conduit_power = new Effect("conduit_power");
            public static readonly Effect dolphins_grace = new Effect("dolphins_grace");
            public static readonly Effect bad_omen = new Effect("bad_omen");
            public static readonly Effect hero_of_the_village = new Effect("hero_of_the_village");

        }
    }
}